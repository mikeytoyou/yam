<?php

namespace Proxies\__CG__\alex\yamBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TrOrderState extends \alex\yamBundle\Entity\TrOrderState implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'idOrderState', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'invoice', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'sendEmail', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'moduleName', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'color', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'unremovable', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'hidden', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'logable', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'delivery', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'shipped', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'paid', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'deleted');
        }

        return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'idOrderState', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'invoice', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'sendEmail', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'moduleName', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'color', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'unremovable', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'hidden', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'logable', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'delivery', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'shipped', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'paid', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderState' . "\0" . 'deleted');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TrOrderState $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdOrderState()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdOrderState();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdOrderState', array());

        return parent::getIdOrderState();
    }

    /**
     * {@inheritDoc}
     */
    public function setInvoice($invoice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInvoice', array($invoice));

        return parent::setInvoice($invoice);
    }

    /**
     * {@inheritDoc}
     */
    public function getInvoice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvoice', array());

        return parent::getInvoice();
    }

    /**
     * {@inheritDoc}
     */
    public function setSendEmail($sendEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSendEmail', array($sendEmail));

        return parent::setSendEmail($sendEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getSendEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSendEmail', array());

        return parent::getSendEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setModuleName($moduleName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModuleName', array($moduleName));

        return parent::setModuleName($moduleName);
    }

    /**
     * {@inheritDoc}
     */
    public function getModuleName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModuleName', array());

        return parent::getModuleName();
    }

    /**
     * {@inheritDoc}
     */
    public function setColor($color)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setColor', array($color));

        return parent::setColor($color);
    }

    /**
     * {@inheritDoc}
     */
    public function getColor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getColor', array());

        return parent::getColor();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnremovable($unremovable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnremovable', array($unremovable));

        return parent::setUnremovable($unremovable);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnremovable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnremovable', array());

        return parent::getUnremovable();
    }

    /**
     * {@inheritDoc}
     */
    public function setHidden($hidden)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHidden', array($hidden));

        return parent::setHidden($hidden);
    }

    /**
     * {@inheritDoc}
     */
    public function getHidden()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHidden', array());

        return parent::getHidden();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogable($logable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogable', array($logable));

        return parent::setLogable($logable);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogable', array());

        return parent::getLogable();
    }

    /**
     * {@inheritDoc}
     */
    public function setDelivery($delivery)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDelivery', array($delivery));

        return parent::setDelivery($delivery);
    }

    /**
     * {@inheritDoc}
     */
    public function getDelivery()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDelivery', array());

        return parent::getDelivery();
    }

    /**
     * {@inheritDoc}
     */
    public function setShipped($shipped)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShipped', array($shipped));

        return parent::setShipped($shipped);
    }

    /**
     * {@inheritDoc}
     */
    public function getShipped()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShipped', array());

        return parent::getShipped();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaid($paid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaid', array($paid));

        return parent::setPaid($paid);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaid', array());

        return parent::getPaid();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted($deleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', array($deleted));

        return parent::setDeleted($deleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeleted', array());

        return parent::getDeleted();
    }

}
