<?php

namespace Proxies\__CG__\alex\yamBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TrProductAttribute extends \alex\yamBundle\Entity\TrProductAttribute implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'idProductAttribute', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'idProduct', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'reference', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'supplierReference', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'location', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'ean13', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'upc', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'wholesalePrice', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'price', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'ecotax', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'quantity', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'weight', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'unitPriceImpact', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'defaultOn', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'minimalQuantity', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'availableDate');
        }

        return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'idProductAttribute', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'idProduct', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'reference', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'supplierReference', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'location', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'ean13', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'upc', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'wholesalePrice', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'price', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'ecotax', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'quantity', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'weight', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'unitPriceImpact', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'defaultOn', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'minimalQuantity', '' . "\0" . 'alex\\yamBundle\\Entity\\TrProductAttribute' . "\0" . 'availableDate');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TrProductAttribute $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdProductAttribute()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdProductAttribute();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdProductAttribute', array());

        return parent::getIdProductAttribute();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdProduct($idProduct)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdProduct', array($idProduct));

        return parent::setIdProduct($idProduct);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdProduct', array());

        return parent::getIdProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference($reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', array($reference));

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', array());

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setSupplierReference($supplierReference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSupplierReference', array($supplierReference));

        return parent::setSupplierReference($supplierReference);
    }

    /**
     * {@inheritDoc}
     */
    public function getSupplierReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupplierReference', array());

        return parent::getSupplierReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocation($location)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocation', array($location));

        return parent::setLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', array());

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setEan13($ean13)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEan13', array($ean13));

        return parent::setEan13($ean13);
    }

    /**
     * {@inheritDoc}
     */
    public function getEan13()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEan13', array());

        return parent::getEan13();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpc($upc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpc', array($upc));

        return parent::setUpc($upc);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpc', array());

        return parent::getUpc();
    }

    /**
     * {@inheritDoc}
     */
    public function setWholesalePrice($wholesalePrice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWholesalePrice', array($wholesalePrice));

        return parent::setWholesalePrice($wholesalePrice);
    }

    /**
     * {@inheritDoc}
     */
    public function getWholesalePrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWholesalePrice', array());

        return parent::getWholesalePrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setEcotax($ecotax)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEcotax', array($ecotax));

        return parent::setEcotax($ecotax);
    }

    /**
     * {@inheritDoc}
     */
    public function getEcotax()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEcotax', array());

        return parent::getEcotax();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity($quantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', array($quantity));

        return parent::setQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', array());

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeight($weight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeight', array($weight));

        return parent::setWeight($weight);
    }

    /**
     * {@inheritDoc}
     */
    public function getWeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeight', array());

        return parent::getWeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnitPriceImpact($unitPriceImpact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnitPriceImpact', array($unitPriceImpact));

        return parent::setUnitPriceImpact($unitPriceImpact);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnitPriceImpact()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnitPriceImpact', array());

        return parent::getUnitPriceImpact();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultOn($defaultOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultOn', array($defaultOn));

        return parent::setDefaultOn($defaultOn);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultOn', array());

        return parent::getDefaultOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setMinimalQuantity($minimalQuantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMinimalQuantity', array($minimalQuantity));

        return parent::setMinimalQuantity($minimalQuantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getMinimalQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinimalQuantity', array());

        return parent::getMinimalQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvailableDate($availableDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvailableDate', array($availableDate));

        return parent::setAvailableDate($availableDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailableDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailableDate', array());

        return parent::getAvailableDate();
    }

}
