<?php

namespace Proxies\__CG__\alex\yamBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TrWarehouse extends \alex\yamBundle\Entity\TrWarehouse implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'idWarehouse', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'idCurrency', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'idAddress', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'idEmployee', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'reference', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'name', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'managementType', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'deleted');
        }

        return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'idWarehouse', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'idCurrency', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'idAddress', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'idEmployee', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'reference', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'name', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'managementType', '' . "\0" . 'alex\\yamBundle\\Entity\\TrWarehouse' . "\0" . 'deleted');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TrWarehouse $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdWarehouse()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdWarehouse();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdWarehouse', array());

        return parent::getIdWarehouse();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCurrency($idCurrency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCurrency', array($idCurrency));

        return parent::setIdCurrency($idCurrency);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCurrency', array());

        return parent::getIdCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdAddress($idAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdAddress', array($idAddress));

        return parent::setIdAddress($idAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdAddress', array());

        return parent::getIdAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdEmployee($idEmployee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdEmployee', array($idEmployee));

        return parent::setIdEmployee($idEmployee);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdEmployee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdEmployee', array());

        return parent::getIdEmployee();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference($reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', array($reference));

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', array());

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setManagementType($managementType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManagementType', array($managementType));

        return parent::setManagementType($managementType);
    }

    /**
     * {@inheritDoc}
     */
    public function getManagementType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getManagementType', array());

        return parent::getManagementType();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted($deleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', array($deleted));

        return parent::setDeleted($deleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeleted', array());

        return parent::getDeleted();
    }

}
