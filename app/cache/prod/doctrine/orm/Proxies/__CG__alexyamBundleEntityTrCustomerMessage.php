<?php

namespace Proxies\__CG__\alex\yamBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TrCustomerMessage extends \alex\yamBundle\Entity\TrCustomerMessage implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'idCustomerMessage', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'idCustomerThread', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'idEmployee', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'message', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'fileName', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'ipAddress', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'userAgent', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'dateAdd', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'dateUpd', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'private', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'read');
        }

        return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'idCustomerMessage', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'idCustomerThread', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'idEmployee', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'message', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'fileName', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'ipAddress', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'userAgent', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'dateAdd', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'dateUpd', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'private', '' . "\0" . 'alex\\yamBundle\\Entity\\TrCustomerMessage' . "\0" . 'read');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TrCustomerMessage $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdCustomerMessage()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdCustomerMessage();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCustomerMessage', array());

        return parent::getIdCustomerMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCustomerThread($idCustomerThread)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCustomerThread', array($idCustomerThread));

        return parent::setIdCustomerThread($idCustomerThread);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCustomerThread()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCustomerThread', array());

        return parent::getIdCustomerThread();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdEmployee($idEmployee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdEmployee', array($idEmployee));

        return parent::setIdEmployee($idEmployee);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdEmployee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdEmployee', array());

        return parent::getIdEmployee();
    }

    /**
     * {@inheritDoc}
     */
    public function setMessage($message)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessage', array($message));

        return parent::setMessage($message);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessage', array());

        return parent::getMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function setFileName($fileName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFileName', array($fileName));

        return parent::setFileName($fileName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileName', array());

        return parent::getFileName();
    }

    /**
     * {@inheritDoc}
     */
    public function setIpAddress($ipAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIpAddress', array($ipAddress));

        return parent::setIpAddress($ipAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getIpAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIpAddress', array());

        return parent::getIpAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserAgent($userAgent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserAgent', array($userAgent));

        return parent::setUserAgent($userAgent);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserAgent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserAgent', array());

        return parent::getUserAgent();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAdd($dateAdd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAdd', array($dateAdd));

        return parent::setDateAdd($dateAdd);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAdd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAdd', array());

        return parent::getDateAdd();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateUpd($dateUpd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateUpd', array($dateUpd));

        return parent::setDateUpd($dateUpd);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateUpd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateUpd', array());

        return parent::getDateUpd();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrivate($private)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrivate', array($private));

        return parent::setPrivate($private);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrivate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrivate', array());

        return parent::getPrivate();
    }

    /**
     * {@inheritDoc}
     */
    public function setRead($read)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRead', array($read));

        return parent::setRead($read);
    }

    /**
     * {@inheritDoc}
     */
    public function getRead()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRead', array());

        return parent::getRead();
    }

}
