<?php

namespace Proxies\__CG__\alex\yamBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TrThemeconfigurator extends \alex\yamBundle\Entity\TrThemeconfigurator implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'idItem', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'idShop', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'idLang', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'itemOrder', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'title', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'titleUse', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'hook', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'url', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'target', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'image', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'imageW', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'imageH', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'html', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'active');
        }

        return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'idItem', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'idShop', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'idLang', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'itemOrder', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'title', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'titleUse', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'hook', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'url', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'target', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'image', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'imageW', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'imageH', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'html', '' . "\0" . 'alex\\yamBundle\\Entity\\TrThemeconfigurator' . "\0" . 'active');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TrThemeconfigurator $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdItem()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdItem();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdItem', array());

        return parent::getIdItem();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdShop($idShop)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdShop', array($idShop));

        return parent::setIdShop($idShop);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdShop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdShop', array());

        return parent::getIdShop();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdLang($idLang)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdLang', array($idLang));

        return parent::setIdLang($idLang);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdLang()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdLang', array());

        return parent::getIdLang();
    }

    /**
     * {@inheritDoc}
     */
    public function setItemOrder($itemOrder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemOrder', array($itemOrder));

        return parent::setItemOrder($itemOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemOrder', array());

        return parent::getItemOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitleUse($titleUse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitleUse', array($titleUse));

        return parent::setTitleUse($titleUse);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitleUse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitleUse', array());

        return parent::getTitleUse();
    }

    /**
     * {@inheritDoc}
     */
    public function setHook($hook)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHook', array($hook));

        return parent::setHook($hook);
    }

    /**
     * {@inheritDoc}
     */
    public function getHook()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHook', array());

        return parent::getHook();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', array($url));

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', array());

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setTarget($target)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTarget', array($target));

        return parent::setTarget($target);
    }

    /**
     * {@inheritDoc}
     */
    public function getTarget()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTarget', array());

        return parent::getTarget();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', array($image));

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', array());

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageW($imageW)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageW', array($imageW));

        return parent::setImageW($imageW);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageW()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageW', array());

        return parent::getImageW();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageH($imageH)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageH', array($imageH));

        return parent::setImageH($imageH);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageH()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageH', array());

        return parent::getImageH();
    }

    /**
     * {@inheritDoc}
     */
    public function setHtml($html)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHtml', array($html));

        return parent::setHtml($html);
    }

    /**
     * {@inheritDoc}
     */
    public function getHtml()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHtml', array());

        return parent::getHtml();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

}
