<?php

namespace Proxies\__CG__\alex\yamBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TrGuest extends \alex\yamBundle\Entity\TrGuest implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'idGuest', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'idOperatingSystem', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'idWebBrowser', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'idCustomer', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'javascript', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'screenResolutionX', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'screenResolutionY', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'screenColor', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'sunJava', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'adobeFlash', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'adobeDirector', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'appleQuicktime', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'realPlayer', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'windowsMedia', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'acceptLanguage', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'mobileTheme');
        }

        return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'idGuest', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'idOperatingSystem', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'idWebBrowser', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'idCustomer', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'javascript', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'screenResolutionX', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'screenResolutionY', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'screenColor', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'sunJava', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'adobeFlash', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'adobeDirector', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'appleQuicktime', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'realPlayer', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'windowsMedia', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'acceptLanguage', '' . "\0" . 'alex\\yamBundle\\Entity\\TrGuest' . "\0" . 'mobileTheme');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TrGuest $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdGuest()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdGuest();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdGuest', array());

        return parent::getIdGuest();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdOperatingSystem($idOperatingSystem)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdOperatingSystem', array($idOperatingSystem));

        return parent::setIdOperatingSystem($idOperatingSystem);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdOperatingSystem()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdOperatingSystem', array());

        return parent::getIdOperatingSystem();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdWebBrowser($idWebBrowser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdWebBrowser', array($idWebBrowser));

        return parent::setIdWebBrowser($idWebBrowser);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdWebBrowser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdWebBrowser', array());

        return parent::getIdWebBrowser();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCustomer($idCustomer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCustomer', array($idCustomer));

        return parent::setIdCustomer($idCustomer);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCustomer', array());

        return parent::getIdCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function setJavascript($javascript)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJavascript', array($javascript));

        return parent::setJavascript($javascript);
    }

    /**
     * {@inheritDoc}
     */
    public function getJavascript()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJavascript', array());

        return parent::getJavascript();
    }

    /**
     * {@inheritDoc}
     */
    public function setScreenResolutionX($screenResolutionX)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScreenResolutionX', array($screenResolutionX));

        return parent::setScreenResolutionX($screenResolutionX);
    }

    /**
     * {@inheritDoc}
     */
    public function getScreenResolutionX()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScreenResolutionX', array());

        return parent::getScreenResolutionX();
    }

    /**
     * {@inheritDoc}
     */
    public function setScreenResolutionY($screenResolutionY)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScreenResolutionY', array($screenResolutionY));

        return parent::setScreenResolutionY($screenResolutionY);
    }

    /**
     * {@inheritDoc}
     */
    public function getScreenResolutionY()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScreenResolutionY', array());

        return parent::getScreenResolutionY();
    }

    /**
     * {@inheritDoc}
     */
    public function setScreenColor($screenColor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScreenColor', array($screenColor));

        return parent::setScreenColor($screenColor);
    }

    /**
     * {@inheritDoc}
     */
    public function getScreenColor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScreenColor', array());

        return parent::getScreenColor();
    }

    /**
     * {@inheritDoc}
     */
    public function setSunJava($sunJava)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSunJava', array($sunJava));

        return parent::setSunJava($sunJava);
    }

    /**
     * {@inheritDoc}
     */
    public function getSunJava()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSunJava', array());

        return parent::getSunJava();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdobeFlash($adobeFlash)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdobeFlash', array($adobeFlash));

        return parent::setAdobeFlash($adobeFlash);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdobeFlash()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdobeFlash', array());

        return parent::getAdobeFlash();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdobeDirector($adobeDirector)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdobeDirector', array($adobeDirector));

        return parent::setAdobeDirector($adobeDirector);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdobeDirector()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdobeDirector', array());

        return parent::getAdobeDirector();
    }

    /**
     * {@inheritDoc}
     */
    public function setAppleQuicktime($appleQuicktime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAppleQuicktime', array($appleQuicktime));

        return parent::setAppleQuicktime($appleQuicktime);
    }

    /**
     * {@inheritDoc}
     */
    public function getAppleQuicktime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAppleQuicktime', array());

        return parent::getAppleQuicktime();
    }

    /**
     * {@inheritDoc}
     */
    public function setRealPlayer($realPlayer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRealPlayer', array($realPlayer));

        return parent::setRealPlayer($realPlayer);
    }

    /**
     * {@inheritDoc}
     */
    public function getRealPlayer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRealPlayer', array());

        return parent::getRealPlayer();
    }

    /**
     * {@inheritDoc}
     */
    public function setWindowsMedia($windowsMedia)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWindowsMedia', array($windowsMedia));

        return parent::setWindowsMedia($windowsMedia);
    }

    /**
     * {@inheritDoc}
     */
    public function getWindowsMedia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWindowsMedia', array());

        return parent::getWindowsMedia();
    }

    /**
     * {@inheritDoc}
     */
    public function setAcceptLanguage($acceptLanguage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcceptLanguage', array($acceptLanguage));

        return parent::setAcceptLanguage($acceptLanguage);
    }

    /**
     * {@inheritDoc}
     */
    public function getAcceptLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcceptLanguage', array());

        return parent::getAcceptLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setMobileTheme($mobileTheme)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMobileTheme', array($mobileTheme));

        return parent::setMobileTheme($mobileTheme);
    }

    /**
     * {@inheritDoc}
     */
    public function getMobileTheme()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMobileTheme', array());

        return parent::getMobileTheme();
    }

}
