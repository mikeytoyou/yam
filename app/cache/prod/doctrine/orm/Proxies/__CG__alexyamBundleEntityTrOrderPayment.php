<?php

namespace Proxies\__CG__\alex\yamBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TrOrderPayment extends \alex\yamBundle\Entity\TrOrderPayment implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'idOrderPayment', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'orderReference', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'idCurrency', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'amount', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'paymentMethod', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'conversionRate', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'transactionId', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'cardNumber', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'cardBrand', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'cardExpiration', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'cardHolder', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'dateAdd');
        }

        return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'idOrderPayment', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'orderReference', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'idCurrency', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'amount', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'paymentMethod', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'conversionRate', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'transactionId', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'cardNumber', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'cardBrand', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'cardExpiration', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'cardHolder', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderPayment' . "\0" . 'dateAdd');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TrOrderPayment $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdOrderPayment()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdOrderPayment();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdOrderPayment', array());

        return parent::getIdOrderPayment();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderReference($orderReference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderReference', array($orderReference));

        return parent::setOrderReference($orderReference);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderReference', array());

        return parent::getOrderReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCurrency($idCurrency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCurrency', array($idCurrency));

        return parent::setIdCurrency($idCurrency);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCurrency', array());

        return parent::getIdCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setAmount($amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAmount', array($amount));

        return parent::setAmount($amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmount', array());

        return parent::getAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentMethod($paymentMethod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentMethod', array($paymentMethod));

        return parent::setPaymentMethod($paymentMethod);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentMethod', array());

        return parent::getPaymentMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function setConversionRate($conversionRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConversionRate', array($conversionRate));

        return parent::setConversionRate($conversionRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getConversionRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConversionRate', array());

        return parent::getConversionRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionId($transactionId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionId', array($transactionId));

        return parent::setTransactionId($transactionId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionId', array());

        return parent::getTransactionId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCardNumber($cardNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCardNumber', array($cardNumber));

        return parent::setCardNumber($cardNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getCardNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCardNumber', array());

        return parent::getCardNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setCardBrand($cardBrand)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCardBrand', array($cardBrand));

        return parent::setCardBrand($cardBrand);
    }

    /**
     * {@inheritDoc}
     */
    public function getCardBrand()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCardBrand', array());

        return parent::getCardBrand();
    }

    /**
     * {@inheritDoc}
     */
    public function setCardExpiration($cardExpiration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCardExpiration', array($cardExpiration));

        return parent::setCardExpiration($cardExpiration);
    }

    /**
     * {@inheritDoc}
     */
    public function getCardExpiration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCardExpiration', array());

        return parent::getCardExpiration();
    }

    /**
     * {@inheritDoc}
     */
    public function setCardHolder($cardHolder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCardHolder', array($cardHolder));

        return parent::setCardHolder($cardHolder);
    }

    /**
     * {@inheritDoc}
     */
    public function getCardHolder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCardHolder', array());

        return parent::getCardHolder();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAdd($dateAdd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAdd', array($dateAdd));

        return parent::setDateAdd($dateAdd);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAdd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAdd', array());

        return parent::getDateAdd();
    }

}
