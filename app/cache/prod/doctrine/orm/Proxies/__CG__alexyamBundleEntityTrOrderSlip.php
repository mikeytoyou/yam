<?php

namespace Proxies\__CG__\alex\yamBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TrOrderSlip extends \alex\yamBundle\Entity\TrOrderSlip implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'idOrderSlip', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'conversionRate', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'idCustomer', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'idOrder', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'shippingCost', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'amount', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'shippingCostAmount', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'partial', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'dateAdd', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'dateUpd');
        }

        return array('__isInitialized__', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'idOrderSlip', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'conversionRate', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'idCustomer', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'idOrder', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'shippingCost', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'amount', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'shippingCostAmount', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'partial', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'dateAdd', '' . "\0" . 'alex\\yamBundle\\Entity\\TrOrderSlip' . "\0" . 'dateUpd');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TrOrderSlip $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdOrderSlip()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdOrderSlip();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdOrderSlip', array());

        return parent::getIdOrderSlip();
    }

    /**
     * {@inheritDoc}
     */
    public function setConversionRate($conversionRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConversionRate', array($conversionRate));

        return parent::setConversionRate($conversionRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getConversionRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConversionRate', array());

        return parent::getConversionRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCustomer($idCustomer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCustomer', array($idCustomer));

        return parent::setIdCustomer($idCustomer);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCustomer', array());

        return parent::getIdCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdOrder($idOrder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdOrder', array($idOrder));

        return parent::setIdOrder($idOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdOrder', array());

        return parent::getIdOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setShippingCost($shippingCost)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShippingCost', array($shippingCost));

        return parent::setShippingCost($shippingCost);
    }

    /**
     * {@inheritDoc}
     */
    public function getShippingCost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShippingCost', array());

        return parent::getShippingCost();
    }

    /**
     * {@inheritDoc}
     */
    public function setAmount($amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAmount', array($amount));

        return parent::setAmount($amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmount', array());

        return parent::getAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setShippingCostAmount($shippingCostAmount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShippingCostAmount', array($shippingCostAmount));

        return parent::setShippingCostAmount($shippingCostAmount);
    }

    /**
     * {@inheritDoc}
     */
    public function getShippingCostAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShippingCostAmount', array());

        return parent::getShippingCostAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setPartial($partial)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPartial', array($partial));

        return parent::setPartial($partial);
    }

    /**
     * {@inheritDoc}
     */
    public function getPartial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartial', array());

        return parent::getPartial();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAdd($dateAdd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAdd', array($dateAdd));

        return parent::setDateAdd($dateAdd);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAdd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAdd', array());

        return parent::getDateAdd();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateUpd($dateUpd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateUpd', array($dateUpd));

        return parent::setDateUpd($dateUpd);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateUpd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateUpd', array());

        return parent::getDateUpd();
    }

}
